<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Macdarwin's thoughts]]></title>
  <link href="http://macdarwin.github.com/atom.xml" rel="self"/>
  <link href="http://macdarwin.github.com/"/>
  <updated>2013-01-07T18:51:34+01:00</updated>
  <id>http://macdarwin.github.com/</id>
  <author>
    <name><![CDATA[Guillaume Fradet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zabbix and PHP Weathermap]]></title>
    <link href="http://macdarwin.github.com/blog/2013/01/07/zabbix-and-php-weathermap/"/>
    <updated>2013-01-07T17:48:00+01:00</updated>
    <id>http://macdarwin.github.com/blog/2013/01/07/zabbix-and-php-weathermap</id>
    <content type="html"><![CDATA[<h2>My sources</h2>

<p>There is out there some people that wonder about using <a href="http://www.network-weathermap.com/">PHP Weathermap</a>  into <a href="http://www.zabbix.com/">Zabbix</a> monitoring system like:</p>

<ul>
<li><a href="http://julien.recurt.fr/2010/11/php-weathermap-zabbix/">http://julien.recurt.fr/2010/11/php-weathermap-zabbix/</a></li>
<li><a href="http://amousset.fr/blog/weathermap-zabbix/">http://amousset.fr/blog/weathermap-zabbix/</a></li>
</ul>


<p>They develop an adapter to use Zabbix data into Weathermap. But for me the configuration is a pain&#8230;</p>

<p>The syntax here is : &#8220;TARGET zabbix:in:out&#8221; where in and out is IDs of Zabbix items.</p>

<p>Like : <strong>&#8220;TARGET zabbix:42720:23453&#8221;</strong></p>

<h2>in:out with Zabbix syntax</h2>

<p>When you configure Zabbix label you have to do some sort of scripting.
Like : {Srx:ifInOctets[fe-0/0/1.30].avg(120)}</p>

<p>It say to zabbix to generate the value of :</p>

<ul>
<li>Hosts name : Srx</li>
<li>Item name : ifInOctets[fe-0/0/1.30] (it could be ifInOctets[eth0] on other hosts)</li>
<li>Calculation : average for the last 120 seconds</li>
</ul>


<p>My goal is just to use the same syntax without calculation right now.</p>

<p>PHP Weathermap config that I get is : &#8220;TARGET zabbix:in:out&#8221; where in and out is Zabbix label scripting syntaxt.</p>

<p>Like: <strong>&#8220;TARGET zabbix:{Srx:ifInOctets[fe-0/0/1.30]}:{Srx:ifOutOctets[fe-0/0/1.30]}&#8221;</strong></p>

<p>This is for me much more easier to configure with that syntax.</p>

<h2>Result</h2>

<div><script src='https://gist.github.com/4476732.js'></script>
<noscript><pre><code>&lt;?php
// Zabbix Pluggable datasource for PHP Weathermap 0.9
// - read a pair of values from a database, and return it
// TARGET zabbix:in:out

//ini_set('display_errors', 'On');
//error_reporting(E_ALL);

class WeatherMapDataSource_zabbix extends WeatherMapDataSource {

    function Init(&amp;$map)
    {
        $db_type = 'mysql';
        $db_host = '';
        $db_name = '';
        $db_user = '';
        $db_pass = '';

        try {
            $this-&gt;db = new PDO($db_type . &quot;:host=&quot; . $db_host . &quot;;dbname=&quot; . $db_name, $db_user, $db_pass);
            $this-&gt;db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            return(TRUE);
        }
        catch(PDOException $e) {
            warn('Zabbix ReadData: Error connecting to database: ' . $e-&gt;getMessage());
            return FALSE;
        }
    }

    function Recognise($targetstring)
    {
        if(preg_match(&quot;/^zabbix:{(.*)}:{(.*)}$/&quot;,$targetstring,$matches))
        {
            return TRUE;
        }
        else
        {
            return FALSE;
        }
    }

    function ReadData($targetstring, &amp;$map, &amp;$item)
    {
        $data[IN] = NULL;
        $data[OUT] = NULL;
        $data_time = 0;

        if(preg_match(&quot;/^zabbix:{(.*)}:{(.*)}$/&quot;,$targetstring,$matches))
        {
            $raw_in = $matches[1]; //mysql_real_escape_string($matches[1]);
            $raw_out= $matches[2]; //mysql_real_escape_string($matches[2]);

            debug (&quot;Found for IN Value :  $raw_in&quot;);
            debug (&quot;Found for OUT Value :  $raw_out&quot;);

        $inArgs = preg_split('/\:/', $raw_in);
            $outArgs = preg_split('/\:/', $raw_out);

            $SQL_IN = &quot;select lastvalue as value, hosts.error as herror from items LEFT JOIN hosts on items.hostid = hosts.hostid where key_ = ? and hosts.host = ? limit 1&quot;;
            $SQL_OUT = &quot;select lastvalue as value, lastclock as clock, hosts.error as herror from items LEFT JOIN hosts on items.hostid = hosts.hostid where key_ = ? and hosts.host = ? limit 1&quot;;

            $query_in = $this-&gt;db-&gt;prepare($SQL_IN);
            $query_out = $this-&gt;db-&gt;prepare($SQL_OUT);

            if($query_in)
            {
                $result_IN = $query_in-&gt;execute(array($inArgs[1], $inArgs[0]));
                if (!$result_IN)
                {
                    warn(&quot;Zabbix ReadData: Invalid query for IN value&quot; . $raw_in);
                }
                else
                {
                    $row_IN = $query_in-&gt;fetch(PDO::FETCH_ASSOC);
                    $data[IN] = $row_IN['value'];
                    if(!empty($row_IN['herror']))
                        $data[IN] = null;
                }
            }
            else
            {
                warn(&quot;Zabbix ReadData: Invalid query for IN value: $SQL_IN&quot;);
            }

            if ($query_out)
            {
                $result_OUT = $query_out-&gt;execute(array($outArgs[1], $outArgs[0]));
                if (!$result_OUT)
                {
                    warn(&quot;Zabbix ReadData: Invalid query for OUT value&quot;);
                }
                else
                {
                        $row_OUT = $query_out-&gt;fetch(PDO::FETCH_ASSOC);
                        $data[OUT] = $row_OUT['value'];
                        $data_time = $row_OUT['clock'];
                        if(!empty($row_OUT['herror']))
                            $data[OUT] = null;
                }
            }
            else
            {
                warn(&quot;Zabbix ReadData: Invalid query for OUT value: $SQL_OUT&quot;);
            }
        }

        debug (&quot;RRD ReadData: Returning (&quot;.($data[IN]===NULL?'NULL':$data[IN]).&quot;,&quot;.($data[OUT]===NULL?'NULL':$data[IN]).&quot;,$data_time)n&quot;);
        return( array($data[IN], $data[OUT], $data_time) );
    }
}</code></pre></noscript></div>


<h2>Conclusion</h2>

<p>I did it between 2am and 3am last friday&#8230; It works on my Zabbix server, I hope there is no bug.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['snmp_build: unknown failure' error with Zabbix Server 2.0.4 on Debian 6]]></title>
    <link href="http://macdarwin.github.com/blog/2013/01/04/snmp-build-unknown-failure-error-with-zabbix-server-2-dot-0-4-on-debian-6/"/>
    <updated>2013-01-04T13:36:00+01:00</updated>
    <id>http://macdarwin.github.com/blog/2013/01/04/snmp-build-unknown-failure-error-with-zabbix-server-2-dot-0-4-on-debian-6</id>
    <content type="html"><![CDATA[<p>We have done a new install of Zabbix Server under Debian 6.</p>

<p>We followed different how-to found on the web like <a href="https://www.zabbix.com/documentation/2.0/manual/installation/install">https://www.zabbix.com/documentation/2.0/manual/installation/install</a>  or <a href="http://denisrosenkranz.com/installation-de-zabbix-2-0-2-sous-debian-6/">http://denisrosenkranz.com/installation-de-zabbix-2-0-2-sous-debian-6/</a>.</p>

<p>Everything works like a charm except some problems with the SNMP. In log error: <strong>&#8220;snmp_build: unknown failure&#8221;</strong>.</p>

<p>In fact, the server wasn&#8217;t able to discover snmp service because:</p>

<ul>
<li>It needs MIBs to work well.</li>
<li>Out of the box Debian don&#8217;t have any default MIBs installed on it because of license incompatibility.</li>
</ul>


<p>So we install <strong>snmp-mibs-downloader</strong> but this package is a <strong>non-free</strong> package. To be able to install it via apt-get we change our apt/sources.list to add non-free package.</p>

<p>This <strong>&#8220;snmp_build: unknown failure&#8221;</strong> isn&#8217;t really explicit but solution is really easy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress for Windows]]></title>
    <link href="http://macdarwin.github.com/blog/2012/12/26/octopress-for-windows/"/>
    <updated>2012-12-26T21:15:00+01:00</updated>
    <id>http://macdarwin.github.com/blog/2012/12/26/octopress-for-windows</id>
    <content type="html"><![CDATA[<h2>Installation of an Octopress Blog engine on Windows</h2>

<p>First, sorry for my english that might sometimes be hard to understand sometimes&#8230;</p>

<p>This post is only a simplification of all the steps needed to have an Octopress blog engine working on Windows. This is not really hard but information isn&#8217;t gathered in one place.</p>

<p>As Octopress said: &#8220;You should be comfortable running shell commands and familiar with the basics of Git. If that sounds daunting, Octopress probably isnâ€™t for you.&#8221;. The Windows version follows the same rule&#8230;</p>

<h2>First of all the Prerequisites</h2>

<p>Octopress need 3 components: Git, Ruby and Ruby&#8217;s DevKit. These components need to be <strong>in the Windows&#8217;s PATH</strong> so please click on the good checkbox during setup.</p>

<ul>
<li><strong>Git: <a href="http://git-scm.com/">http://git-scm.com/</a></strong></li>
</ul>


<p>The Widnows version of Git can be download easily from git&#8217;s official web site: <a href="http://git-scm.com/download/win">http://git-scm.com/download/win</a>.</p>

<p>Download and follow the instructions (be careful, don&#8217;t forget to add Git to the windows PATH). Normally this step is already done if you use Git and Github.</p>

<ul>
<li><strong>Ruby : <a href="http://rubyinstaller.org/">http://rubyinstaller.org/</a></strong></li>
</ul>


<p>The best installer so far for Ruby on Windows, is made by RubyInstaller. You can download it here : <a href="http://rubyinstaller.org/downloads/">http://rubyinstaller.org/downloads/</a>.</p>

<p>Download and follow the instructions. You have to add Ruby to the windows PATH. In the instructions that follow, the directory that you selected is identified as <code>&lt;RUBY_INSTALL_DIR&gt;</code>. Pay attention to the folder where you install Ruby, the path must not contain spaces.</p>

<ul>
<li><strong>Ruby&#8217;s DevKit : <a href="http://rubyinstaller.org/">http://rubyinstaller.org/</a></strong></li>
</ul>


<p>Once again RubyInstaller made a good job for this too. You can download it here : <a href="http://rubyinstaller.org/downloads/">http://rubyinstaller.org/downloads/</a> on the left under &#8220;Development Kit&#8221;.</p>

<p>Download and unpack somewhere (ex: <code>C:\RubyDevKit</code>). In the instructions that follow, the directory that you selected is identified as <code>&lt;DEVKIT_INSTALL_DIR&gt;</code>. Once again, pay attention to the folder where you install it, the path must not contain spaces.</p>

<p>Now you have to install the DevKit into your Ruby folder. To do that open a Command window and do the following:</p>

<pre>
cd <DEVKIT_INSTALL_DIR>
ruby dk.rb init
</pre>


<p>If you choose a <code>&lt;RUBY_INSTALL_DIR&gt;</code> that is not the default one, you have to edit the <code>/config.yml</code> file (generated in the <code>&lt;DEVKIT_INSTALL_DIR&gt;</code>) and change the Ruby&#8217;s folder path.</p>

<p>Continue with the following (in the same folder):</p>

<pre>
ruby dk.rb install
</pre>


<p>All the Prerequisites are installed now. We can go to the next step Octopress setup ;)</p>

<h2>Octopress setup</h2>

<p>Octopress setup is really easy, just clone the official Octopress repository : <a href="git://github.com/imathis/octopress.git">git://github.com/imathis/octopress.git</a> in a folder of your choice. In the instructions that follow, the directory that you selected is identified as <code>&lt;MY_BLOG_FOLDER&gt;</code>.</p>

<p>You can now do the following in a Command Window:</p>

<pre>
cd <MY_BLOG_FOLDER>
ruby --version # <- this should report Ruby version 1.9.3
gem install bundler
bundle install
rake install
</pre>


<p>Well you have now a version of Octopress that just need to be deployed.</p>

<h2>Next step and conclusion</h2>

<p>To be fully functional you need to choose you deploying method (Github, Heroku, RSync&#8230;). I will not explain those steps; octopress.org already explains that very well. Follow the instruction in <a href="http://octopress.org/docs/deploying/">http://octopress.org/docs/deploying/</a> and Enjoy !</p>

<p>I hope this post helps in some point.</p>
]]></content>
  </entry>
  
</feed>
